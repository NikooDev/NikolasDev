@use "sass:math";
@import "./../variables";
@import "./../mixins";

// Positions => p
@each $position, $i in $positions { .p#{$position} {position: $i;} }

// Display => d
@each $display, $i in $displays { .d#{$display} {display: $i;} }

// Flex-direction => fd
@each $fDirection, $i in $fDirections { .fd#{$fDirection} {flex-direction: $i;} }

// Flex-grow => fg
@each $fGrow, $i in $fGrows { .fg#{$fGrow} {flex-grow: $i;} }

// Flex-basis => fb
@each $fBasis, $i in $fBasiss { .fb#{$fBasis} {flex-basis: $i;} }

// Flex-shrink => fs
@each $fShrink, $i in $fShrinks { .fs#{$fShrink} {flex-shrink: $i;} }

// Flex-wrap => fw
@each $fWrap, $i in $fWraps { .fw#{$fWrap} {flex-wrap: $i;} }

// Align-item => ai
@each $aItem, $i in $aItems { .ai#{$aItem} {align-items: $i;} }

// Align-content => ac
@each $aContent, $i in $aContents { .ac#{$aContent} {align-content: $i;} }

// Justify-items => ji
@each $jItem, $i in $jItems { .ji#{$jItem} {justify-items: $i;} }

// Justify-content => jc
@each $jContent, $i in $jContents { .jc#{$jContent} {justify-content: $i;} }

// Text-align => ta
@each $textAlign, $i in $textAligns { .ta#{$textAlign} {text-align: $i;} }

// Overflow => ov
@each $overflow, $i in $overflows { .ov#{$overflow} {overflow: $i;} }

// Border-radius => br
@each $radius, $i in $radius {
	.brtl#{$radius} {border-top-left-radius: $i;}
	.brtr#{$radius} {border-top-right-radius: $i;}
	.brbl#{$radius} {border-bottom-left-radius: $i;}
	.brbr#{$radius} {border-bottom-right-radius: $i;}
}

// Font-weight => fwe
@each $fweight, $i in $fweights { .fwe#{$fweight} {font-weight: $i;} }

// Opacity => op
@each $opacity, $i in $opacitys { .op#{$opacity} {opacity: $i;} }

// Z-index => zi
@each $zindex, $i in $zIndexs { .zi#{$zindex} {z-index: $i;} }

// Margins => mt - ml - mb - mr
@for $i from 1 through 10 {
	@each $margin in t, l, b, r {
		.m#{$margin+$i} {
			@include margins($margin, math.div(1rem * $i, 2))
		}
	}
}

// Paddings => pt - pl - pb - pr
@for $i from 1 through 10 {
	@each $padding in t, l, b, r {
		.p#{$padding+$i} {
			@include paddings($padding, math.div(1rem * $i, 2))
		}
	}
}

// Top / Left / Right / Bottom => t - l - r - b
@for $i from 0 through 20 {
	@if( $i == 0 ) {
		.t#{$i} {top: 0}
		.l#{$i} {left: 0}
		.r#{$i} {right: 0}
		.b#{$i} {bottom: 0}
	} @else {
		.t#{$i} {top: math.div(1rem * $i, 2)}
		.l#{$i} {left: math.div(1rem * $i, 2)}
		.r#{$i} {right: math.div(1rem * $i, 2)}
		.b#{$i} {bottom: math.div(1rem * $i, 2)}
	}
}

// Container
.container {
	margin: 0 auto;
	&__maxWidth {
		max-width: 72rem;
	}
	&__width {
		width: 100%;
	}
}

// Rect
.tm2 {
	top: -2rem;
}
.posLegal {
	top: -20rem!important;
	width: 32%!important;
}
.rect {
	width: 40%;
	transition: top 1s cubic-bezier(0.65, 0, 0.35, 1);
	@include laptop {
		width: 32%;
		top: 17rem;
		height: 100%;
	}
	@include tablet {
		top: 11rem;
	}
	@include mobile {
		top: 34rem;
		width: 65%;
	}
}